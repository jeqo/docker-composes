---
version: '3.8'
services:
  vault:
    image: vault:1.9.3
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root

  zookeeper:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:${CP_VERSION}
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092,SSL://kafka:19093,SSL_HOST://localhost:9093

      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 30000

      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous

      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:19092
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: PLAINTEXT
      CONFLUENT_METRICS_REPORTER_TOPIC_CREATE: 'true'

      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-broker-1.p12
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka_broker_1_keystore_credential
      KAFKA_SSL_KEY_CREDENTIALS: kafka_broker_1_key_credential
      KAFKA_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka-truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka_truststore_credential
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka-truststore.jks
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENABLED_PROTOCOLS: TLSv1.2
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      ## Here is where CRL validation for revoked certificates is enabled.
      # KAFKA_OPTS: "-Dcom.sun.security.enableCRLDP=true -Dcom.sun.net.ssl.checkRevocation=true"
    depends_on:
      - zookeeper
    volumes:
      - ./pki:/etc/kafka/secrets

  kafka-client:
    image: confluentinc/cp-kafka:${CP_VERSION}
    entrypoint: /bin/bash
    tty: true
    volumes:
      - ./pki:/etc/kafka/secrets
      - ./config:/etc/kafka/config
