---
version: '3'
services:
  # LDAP
  ldap:
    image: osixia/openldap:1.3.0
    environment:
      LDAP_ORGANISATION: "Confluent"
      LDAP_DOMAIN: "confluent.io"
    command: "--copy-service"
    ports:
      - 389:389
      - 636:636
    volumes:
      - ./ldap:/container/service/slapd/assets/config/bootstrap/ldif/custom
  ## remember that the user name is CN=admin,DC=confluent,DC=io and the password is admin
  ldap-admin:
    image: osixia/phpldapadmin:0.9.0
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=ldap
    ports:
      - 6443:443
    depends_on:
      - ldap
  #
  # cp-core
  zookeeper:
    image: confluentinc/cp-zookeeper:${CP_VERSION}
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      EXTRA_ARGS: -javaagent:/opt/prometheus-jmx-exporter/jmx_prometheus_javaagent.jar=1234:/opt/prometheus-jmx-exporter/zookeeper.yml
    volumes:
      - ./../prometheus-jmx-exporter:/opt/prometheus-jmx-exporter
  kafka:
    image: confluentinc/cp-server:${CP_VERSION}
    ports:
      - 8090:8090
      - 9092:9092
      - 9093:9093
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OPTS: -javaagent:/opt/prometheus-jmx-exporter/jmx_prometheus_javaagent.jar=1234:/opt/prometheus-jmx-exporter/kafka-broker.yaml
      # CONFIGURE LISTENERS
      # RBAC needs separate internal and external listeners
      # OUTSIDE listener is needed if you want to talk to this kafka from your macbook - your macbook is not member of docker network
      # created by compose, so won't know the hostname called 'broker', which will be returned in a list of listeners when console producer or consumer
      # try to get full listener list from bootstrap server
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://localhost:9093,EXTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_CONFLUENT_METADATA_SECURITY_PROTOCOL: SASL_PLAINTEXT
      # Configure interbroker listener
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      # note we're only specifying two users, one for broker-to-broker communication (admin) and one for MDS to talk to broker (mds)
      KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
                                                          \
                                                          org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                          username="admin" \
                                                          password="admin-secret" \
                                                          user_admin="admin-secret" \
                                                          user_mds="mds-secret";
      # Configure external listener
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_JAAS_CONFIG: |
                                                           \
                                                           org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
                                                           publicKeyPath="/tmp/conf/public.pem";
      # Configure outside listener
      KAFKA_LISTENER_NAME_OUTSIDE_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_JAAS_CONFIG: |
                                                           \
                                                           org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
                                                           publicKeyPath="/tmp/conf/public.pem";
      # ======================== CONFIGURE MDS ====================================
      # Configure how MDS talks to broker
      KAFKA_CONFLUENT_METADATA_BOOTSTRAP_SERVERS: INTERNAL://localhost:9093
      KAFKA_CONFLUENT_METADATA_SASL_MECHANISM: PLAIN
      KAFKA_CONFLUENT_METADATA_SASL_JAAS_CONFIG: |
                                                  \
                                                  org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                  username="mds" \
                                                  password="mds-secret";
      # Configure how MDS stores its data in a topic
      # supposedly more stuff can be overridden with the same prefix
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1
      # Configure MDS listener and http server
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka:8090
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_ROLES: '**'
      # Configure RBAC token server (authentication)
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE: 'true'
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem
      KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH: /tmp/conf/public.pem
      # Configure RBAC authorizer
      # KAFKA_CONFLUENT_AUTHORIZER_SCOPE: myCluster
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      # KAFKA_CONFLUENT_AUTHORIZER_METADATA_PROVIDER: RBAC
      KAFKA_CONFLUENT_AUTHORIZER_GROUP_PROVIDER: RBAC
      # KAFKA_CONFLUENT_METADATA_SERVER_SCOPE: ''
      # Configure MDS to talk to AD/LDAP
      KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
      KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap:389
      # how to authenticate to LDAP
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
      # how to locate users and groups
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluent,dc=io
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluent,dc=io
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
      KAFKA_LDAP_USER_MEMBEROF_ATTRIBUTE: ou
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
      # ======================= CONFIGURE METRICS REPORTER =========================
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # point at our 'INTERNAL' listener
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9093
      CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
      CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: |
                                                    \
                                                    org.apache.kafka.common.security.plain.PlainLoginModule required \
                                                    username="admin" \
                                                    password="admin-secret";
      # disable reporting support metrics
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
    volumes:
      - ./conf:/tmp/conf
      - ./../prometheus-jmx-exporter:/opt/prometheus-jmx-exporter
    depends_on:
      - zookeeper
